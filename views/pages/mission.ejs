<!DOCTYPE html>
<html>
<head>
  <% include ../partials/header.ejs %>
</head>
<script src="/socket.io/socket.io.js"></script>
<script>
  var socket = io();
  var user;
  var mission;

  socket.on('connect', function(){
    user = <%-JSON.stringify(user)%>;
    mission = <%-JSON.stringify(mission)%>;
  	var pack = {
  		'user': user,
  		'mission': mission
  	};

    $("#yourItems").html("<h2> Your Items: </h2>");
    for(var i=0; i< user.items.length; i++){
      $("#yourItems").append('<hr><button type="button" onclick="changeItem(\'' + user.items[i] + '\', true)">' + user.items[i] + '</button>');
    }
    $("#yourItems").append("<hr>");

    $("#groupItems").html("<h2> Mission Items To Submit: </h2>");
    for(var i=0; i< mission.items.length; i++){
      $("#groupItems").append('<hr><button type="button" onclick="changeItem(\'' + mission.items[i] + '\', false)">' + mission.items[i] + '</button>');
    }
    $("#groupItems").append("<hr>");

  	socket.emit('user info', pack);
  });

  socket.on('update users', function(missionU){
    if(missionU.name === mission.name){
      console.log(mission.users);
      mission.users = missionU.users; //sets local mission users variable
      $("#activeUsers").html("<h2> Active users on this Mission: </h2>");
      for(var i=0; i< mission.users.length; i++){
        $("#activeUsers").append("<hr><h3>"+mission.users[i]+"</h3>");
      }
      $("#activeUsers").append("<hr>");
    }
  });

  socket.on('update items', function(pack){
    mission.items = pack.mission.items;
    if(user.user === pack.user.user) //if the update came from the user, update him
      user.items = pack.user.items;

    $("#yourItems").html("<h2> Your Items: </h2>");
    for(var i=0; i< user.items.length; i++){
      $("#yourItems").append('<hr><button type="button" onclick="changeItem(\'' + user.items[i] + '\', true)">' + user.items[i] + '</button>');
    }
    $("#yourItems").append("<hr>");

    $("#groupItems").html("<h2> Items to Trade: </h2>");
    for(var i=0; i< mission.items.length; i++){
      $("#groupItems").append('<hr><button type="button" onclick="changeItem(\'' + mission.items[i] + '\', false)">' + mission.items[i] + '</button>');
    }
    $("#groupItems").append("<hr>");

  });

  function changeItem(item, add){
    console.log(item);
    console.log(add);
    var pack = {
      'user': user,
      'mission': mission,
      'item': item,
      'add': add
    };
    socket.emit('change item', pack);
  }

</script>

<script>
$(document).ready(function(){
  //Canvas stuff
  var canvas = $("#canvas")[0];
  var ctx = canvas.getContext("2d");
  var w = $("#canvas").width();
  var h = $("#canvas").height();
  
  //Lets save the cell width in a variable for easy control
  var cw = 50;
  var d; //keyboard input movement variable
  var food;
  var score;

  var game_board = new Object();

  var players = [];
  
  //Lets create the snake now
  var snake_array; //an array of cells to make up the snake
  
  function init()
  {
    d = "right"; //default direction
    create_players();
    create_board(); //Now we can see the food particle
    //finally lets display the score
    score = 0;

    paint();
  }
  init();
  
  function create_players()
  {
    var player1 = {
      pos: [0,0]
    };
    var player2 = {
      pos: [2,2]
    };
    players.push(player1);
    players.push(player2);
  }
  
  //Lets create the board now
  function create_board()
  {
    game_board.grid = [[0,1,0,0,1,0,0,1],[0,1,0,1,1,0,0,1],[0,0,0,1,1,0,1,1],[1,0,0,1,0,0,1,1],[1,0,0,1,0,0,1,0], [1,0,0,1,0,1,1,0]];
  }
  
  //Lets paint the snake now
  function paint()
  {
    //To avoid the snake trail we need to paint the BG on every frame
    //Lets paint the canvas now
    ctx.fillStyle = "white";
    ctx.fillRect(0, 0, w, h);
    ctx.strokeStyle = "black";
    ctx.strokeRect(0, 0, w, h);

    //These were the position of the head cell.
    //We will increment it to get the new head position
    //Lets add proper direction based movement now
    if(d == "right") players[0].pos[0]++;
    else if(d == "left") players[0].pos[0]--;
    else if(d == "up") players[0].pos[1]--;
    else if(d == "down") players[0].pos[1]++;

    
    for(var i = 0; i < game_board.grid.length; i++)
    {
      var currentRow = game_board.grid[i];
      for(var j = 0; j < currentRow.length; j++)
      {
        var paint = false;

        //Lets paint 10px wide cells
        for(var k = 0; k < players.length; k++){
          console.log("player pos: " + players[k].pos);
          console.log("dist from i: " + Math.abs(players[k].pos[0] - i))
          console.log("dist from j: " + Math.abs(players[k].pos[1] - j))
          if(Math.abs(players[k].pos[0] - i) <= 2 && Math.abs(players[k].pos[1] - j) <= 2){
            console.log("print ", i, j);

            paint = true;
              if(currentRow[j] == 1)
                paint_cell(i, j, "black");
              else
                paint_cell(i,j, "LightGrey");

              
            break;

          }
          else
            paint_cell(i,j,"white");
        }
      }
    }

    for(var i = 0; i < players.length; i++)
    {
      //Lets paint 10px wide cells
      paint_cell(players[i].pos[0], players[i].pos[1], "blue");
    }

  }
  
  //Lets first create a generic function to paint cells
  function paint_cell(x, y, color)
  {
    ctx.fillStyle = color;
    ctx.fillRect(x*cw, y*cw, cw, cw);
    ctx.strokeStyle = "white";
    ctx.strokeRect(x*cw, y*cw, cw, cw);
  }
    
  //Lets add the keyboard controls now
  $(document).keydown(function(e){
    e.preventDefault();
    var key = e.which;
    //We will add another clause to prevent reverse gear
    if(key == "37") d = "left";
    else if(key == "38") d = "up";
    else if(key == "39") d = "right";
    else if(key == "40") d = "down";
    //The snake is now keyboard controllable
    paint()
  })
    
})
</script>

<body>

  <% include ../partials/nav.ejs %>

<div class="jumbotron text-center">
  <div class="container">
    <h1><%=mission.name%></h1>
  </div>
</div>
<canvas id="canvas" width="900" height="450"></canvas>
<div id="activeUsers" class="container">
</div>
<div id="yourItems" class="container">
</div>
<div id="groupItems" class="container">
</div>

</body>
</html>
